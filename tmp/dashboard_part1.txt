import { useParams } from "wouter";
import { useQuery } from "@tanstack/react-query";
import { Project, WbsItem } from "@shared/schema";
import { 
  formatCurrency, 
  formatDate, 
  formatPercent, 
  getStatusColor, 
  calculateCPI, 
  calculateSPI, 
  getPerformanceStatus,
  calculateEarnedValue
} from "@/lib/utils";
import {
  Building,
  Calendar,
  DollarSign,
  ChartLine,
  Hourglass,
  ExpandIcon,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { GanttChart } from "@/components/project/gantt-chart";
import { Skeleton } from "@/components/ui/skeleton";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { useState } from "react";

export default function Dashboard() {
  const params = useParams();
  const projectId = parseInt(params.projectId);
  const [wbsLevel, setWbsLevel] = useState<"level1" | "level2" | "all">("level1");

  // Fetch project data
  const { data: project, isLoading: isLoadingProject } = useQuery<Project>({
    queryKey: [`/api/projects/${projectId}`],
  });

  // Fetch WBS items for the project
  const { data: wbsItems = [], isLoading: isLoadingWbs } = useQuery<WbsItem[]>({
    queryKey: [`/api/projects/${projectId}/wbs`],
  });

  // Filter WBS items based on level selection
  const filteredWbsItems = wbsItems.filter(item => {
    if (wbsLevel === "level1") return item.level === 1;
    if (wbsLevel === "level2") return item.level <= 2;
    return true;
